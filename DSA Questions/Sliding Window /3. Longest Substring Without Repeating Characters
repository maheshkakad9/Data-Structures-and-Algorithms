class Solution {
    public int lengthOfLongestSubstring(String s) {
        int i = 0; 
        int j = 0;
        int n = s.length();
        int length  = 0;
        HashMap<Character,Integer> map = new HashMap<>();
        while(j < n) {
            char ch = s.charAt(j);
            map.put(ch,map.getOrDefault(ch,0)+1);
            if(map.size() == (j-i+1)) {
                length = Math.max(length ,(j-i+1));
                j++;
            } else if(map.size() < (j-i+1)) {
                while(map.size() < (j-i+1)) {
                    char leftChar = s.charAt(i);
                    map.put(leftChar,map.get(leftChar) - 1);
                    if(map.get(leftChar) == 0) {
                        map.remove(leftChar);
                    }
                    i++;
                }
                j++;
            }
        }
        return length;
    }
}
