//Sliding Window Approached 
class Solution {
    public int maxAscendingSum(int[] nums) {
        int maxSum = nums[0];
        int currSum = nums[0];

        for(int i = 1; i < nums.length; i++) {
            if(nums[i] > nums[i - 1]) {
                currSum += nums[i];
            } else {
                currSum = nums[i];
            }
            maxSum = Math.max(maxSum,currSum);
        }

        return maxSum;
    }
}

//Brute Force 
class Solution {
    public int maxAscendingSum(int[] nums) {
        int sum = 0;
        for(int i = 0; i < nums.length; i++) {
            int currSum = nums[i];
            for(int j = i + 1; j < nums.length; j++) {
                if (nums[j] > nums[j - 1]) {
                    currSum += nums[j];
                } else {
                    break;
                }
            }
            sum = Math.max(currSum,sum);
        }
        return sum;
    }
}
